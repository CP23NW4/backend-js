name: CI/CD for backend

on:
  push:
    branches:
      - test-cicd-vm2-with-sec

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Install OpenVPN
      run: |
        sudo apt update
        sudo apt install -y openvpn openvpn-systemd-resolved
    - name: Connect to VPN
      uses: "kota65535/github-openvpn-connect-action@v2"
      with:
        config_file: .github/workflows/sitst-client.ovpn
        username: ${{ secrets.OVPN_USERNAME }}
        password: ${{ secrets.OVPN_PASSWORD }}
      
    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: SSH into Azure VM and pull new code
      run: |
        ssh -o StrictHostKeyChecking=no sysadmin@10.4.85.24 "cd /home/sysadmin/backend-js && git pull"

    - name: Show Docker container status
      run: |
        ssh -o StrictHostKeyChecking=no sysadmin@10.4.85.24 "docker ps -a"

    # - name: Stop and remove existing containers
    #   run: |
    #     ssh -o StrictHostKeyChecking=no sysadmin@10.4.85.24 "cd /home/sysadmin/proxy && docker-compose stop backend-container"
    #     ssh -o StrictHostKeyChecking=no sysadmin@10.4.85.24 "cd /home/sysadmin/proxy && docker-compose rm -f backend-container"

    # - name: Rebuild Docker containers
    #   run: |
    #     ssh -o StrictHostKeyChecking=no sysadmin@10.4.85.24 "cd /home/sysadmin/proxy && docker-compose up -d --build backend-container"

    # - name: Show Docker container status
    #   run: |
    #     ssh -o StrictHostKeyChecking=no sysadmin@10.4.85.24 "docker ps -a"

    # # Install Docker
    # - name: Install Docker
    #   run: |
    #     sudo apt update
    #     sudo apt remove -y containerd.io
    #     sudo apt install -y docker.io

    # Static Application Security Testing (SAST)
    - name: SAST Scan
      # uses: github/codeql-action@v1
      with:
        languages: javascript # Specify the language of your codebase
        
    # Dynamic Application Security Testing (DAST)
    - name: DAST Scan
      run: |
        # Run OWASP ZAP against your application
        # Adjust the target URL and other configurations as needed
        docker run --network="host" -t owasp/zap2docker-stable zap-full-scan.py -t https://capstone23.sit.kmutt.ac.th/nw4/#/

    # Container Scanning
    - name: Container Security Scan
      run: |
        # Run Trivy to scan Docker images for vulnerabilities
        # Adjust the Docker image name and tag as needed
        trivy image backend-image:latest
        
    # Dependency Scanning
    - name: Dependency Security Scan
      run: |
        # Run npm audit to scan project dependencies for vulnerabilities
        npm audit --json > npm_audit_results.json
